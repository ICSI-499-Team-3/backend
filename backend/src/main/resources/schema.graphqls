type Query {
    GetAllUsers: [User!]!
    GetUserByEmail(email: String!): User

    GetAllLogs: [Log!]!
    GetLogsByUserEmail(email: String!): [Log!]!
}

type Mutation {
    CreateUser(input: UserInput!): User!
    CreateLog(input: LogInput!): Log!
}

type User {
    id: ID!
    email: String!
}

input UserInput {
    email: String!
}

type Log {
    id: ID!

    # Unix ts since epoch representing the date and time the activity took place
    dateTimeOfActivity: Float!

    notes: String
    categories: [String!]
    mood: [String!]
}

input LogInput {
    dateTimeOfActivity: Float!
    notes: String
    categories: [String!]
    mood: [String!]
}